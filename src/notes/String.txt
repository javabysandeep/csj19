	1. Define String
	2. In How many ways we can store string data?
	3. Why String class is given when char array is already available?
	4. What are the different ways to construct String object?
	5. What is the difference in String object creation from the String literal and the constructor?
	6. String Pooling
	7. What is immutable and why String objects are immutable?
	8. What do you mean by immutable and mutable objects?
	9. Can we develop immutable object?
	10. Why StringBuffer class is given when we have String class to Store String data?
	11. Why StringBuilder class is given when we have String, StringBuffer class to Store String data?
	12. Is String thread safe?
	13. String vs StringBuffer vs StringBuilder
	14. Can we assign String literal directly to StringBuffer or StringBuilder type variables?
	15. Printing String object
	16. How can we find length of the String?
	17. what is the difference between length & length()?
	18. The limitation of String class.
	19. Concatenation, how Strings can be concatenated?
	20. Convert String case
	21. How can we replace a character or substring in the given String?
	22. How can we trim string leading and trailing spaces?
	23. How String Objects must be compared for equality?
	24. What do meant by comparing string objects lexicographically, how it can be done?--> compareTo
	25. How can we read characters from the String?
	26. How can we find the position of a character or sub-string?
	27. Finding string startsWith or endsWith
	28. Spliting string into tokens
	29. What are the differnt operations we can't perform on string using String object?
	30. Define StringBuffer
	31. When to use StringBuffer class?
	32. What are the special operations can be performed on StringBuffer;
	those cannot be applied on String?
	33. Ways of creating StringBuffer object creation?
	34. Append, Insert, Delete, reverse and overriding characters in the  StringBuffer.
	35. Finding StringBuffer capacity and length
	36. Controlling StringBuffer capacity
	37. Ways of Converting String to StringBuffer and vice versa
